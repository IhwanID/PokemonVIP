//
//  PokemonListViewController.swift
//  PokemonVIP
//
//  Created by Ihwan on 05/01/22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol PokemonListDisplayLogic: AnyObject
{
    func displayFetchedPokemons(viewModel: PokemonList.FetchPokemons.ViewModel)
}

class PokemonListViewController: UITableViewController, PokemonListDisplayLogic
{
    
    var interactor: PokemonListBusinessLogic?
    var router: (NSObjectProtocol & PokemonListRoutingLogic & PokemonListDataPassing)?
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
    {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder)
    {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup()
    {
        let viewController = self
        let interactor = PokemonListInteractor()
        let presenter = PokemonListPresenter()
        let router = PokemonListRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?)
    {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    override func viewWillAppear(_ animated: Bool)
    {
        super.viewWillAppear(animated)
        fetchPokemons()
    }
    
    var displayedPokemons: [PokemonList.FetchPokemons.ViewModel.DisplayedPokemon] = []
    
    func fetchPokemons()
    {
        let request = PokemonList.FetchPokemons.Request()
        interactor?.fetchPokemons(request: request)
    }
    
    func displayFetchedPokemons(viewModel: PokemonList.FetchPokemons.ViewModel) {
        displayedPokemons = viewModel.displayedPokemons
        tableView.reloadData()
    }
    
    
    override func numberOfSections(in tableView: UITableView) -> Int
    {
        return 1
    }
    
    override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int
    {
        return displayedPokemons.count
    }
    
    override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell
    {
        let displayedPokemon = displayedPokemons[indexPath.row]
        let cell = UITableViewCell()
        cell.textLabel?.text = displayedPokemon.name
        return cell
    }
}
