//
//  PokemonListWorker.swift
//  PokemonVIP
//
//  Created by Ihwan on 05/01/22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

class PokemonListWorker
{
    
    var pokemonService: PokemonServiceProtocol
    
    init(pokemonService: PokemonServiceProtocol)
    {
        self.pokemonService = pokemonService
    }
    
    func fetchPokemons(completionHandler: @escaping ([Pokemon]?) -> Void) {
        pokemonService.fetchPokemons { result in
            DispatchQueue.main.async {
            completionHandler(result)
            }
        }
    }
}

protocol PokemonServiceProtocol {
    func fetchPokemons(completionHandler: @escaping ([Pokemon]) -> Void)
}

class PokemonServiceAPI: PokemonServiceProtocol {
    static var pokemons: [Pokemon] = []
        
    func fetchPokemons(completionHandler: @escaping ([Pokemon]) -> Void) {
        let url = URL(string: "https://api.pokemontcg.io/v2/cards")!
        let task = URLSession.shared.dataTask(with: url) { data, response, error in
            if let data = data {
                if let response = try? JSONDecoder().decode(BaseResponse.self, from: data) {
                    type(of: self).pokemons.append(contentsOf: response.data)
                    let pokemons = type(of: self).pokemons
                        completionHandler(pokemons)
                } else {
                    print("Invalid Response")
                }
            } else if let error = error {
                print("HTTP Request Failed \(error)")
            }
        }
        task.resume()
    }
}
